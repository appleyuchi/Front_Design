菜鸟教程中的php的例子是:
https://www.runoob.com/json/json-jsonp.html
但是代码不完整，所以放弃


＃－－－－－－－－－－－jsonp的原理－－－－－－－－－－－－－－－－－－－－
json不支持跨域，意思是:
api1.py对应的html请求api2.py的数据，api2.py如果直接返回json，html是拒收的，
所以这属于跨域(因为本实验中端口不一样)，因此需要jsonp.

所谓的jsonp其实就是"回调函数"+json的形式

＃－－－－－－－－－－－－－为何在script中使用jsonp－－－－－－－－－－－－－－－－－
[3]中提到:
jsonp就是利用<script>标签没有跨域限制的“漏洞”（历史遗迹啊）
来达到与第三方通讯(本实验中指的是127.0.0.1:10074/test_post/aa)的目的。
当需要通讯时,HTML创建一个<script>元素，
地址指向第三方的API网址(本实验中指的是127.0.0.1:10074/test_post/aa)，形如：     
<script src="http://www.example.net/api?param1=1&param2=2"></script>     
并提供一个回调函数successCallback来接收数据（本实验中是successCallback）。     
第三方产生的响应为json数据的包装（故称之为jsonp，即json padding），
形如:
callback({"name":"hax","gender":"Male"})     
这样浏览器会调用successCallback函数，并传递解析后json对象作为参数。
本站脚本可在successCallback函数里处理所传入的数据。

＃－－－－－－－－－－－－－－回调函数到底什么用－－－－－－－－－－－－－－－－－
注意:这里的回调函数不是标准的回调函数，只是用来封装json编程jsonp的。

[1]对于jsonp中的回调函数回答得非常好:

客户端把回调函数的名字传送给服务端，
然后服务端生成一段js代码且代码中包含着对回调函数的调用，
然后服务端把这段代码返回给客户端，
然后客户端执行这段代码的过程中调用了回调函数，
然后你就可以在回调函数里面处理数据了

所以jsonp中的回调函数并不是真正的回调函数，只是一个用来包装json的工具而已。
因为一般情况下，回调函数是A端定义，B端来调用的
而这里的回调函数是在页面运行的
＃－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
1.nginx -c /etc/nginx/nginx.conf&&nginx -s reload
2.
python api1.py
python api2.py
3.浏览器打开127.0.0.1:10072/index，点击按钮即可在页面输出数据
然后F12观察console会看到回调函数的调用效果
＃－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
下面这个链接提到了jsonp的一些缺点
https://www.cnblogs.com/zhouchaoyi/articles/2085924.html
1，不能接受HTTP状态码
2，不能使用POST提交（默认GET）
3，不能发送和接受HTTP头
4，不能设置同步调用（默认异步）

[2]提供了本实验中html中的回调函数的用法，写得很好。

重要的Reference:
[1]https://segmentfault.com/q/1010000002977764
[2]https://www.cnblogs.com/yuzhongwusan/archive/2012/12/11/2812849.html
[3]https://www.zhihu.com/question/19966531/answer/13502030

其他reference:
https://blog.csdn.net/hansexploration/article/details/80314948
https://www.runoob.com/json/json-jsonp.html
https://www.cnblogs.com/xiaohuochai/p/6568039.html
https://www.cnblogs.com/soyxiaobi/p/9616011.html
https://www.cnblogs.com/dowinning/archive/2012/04/19/json-jsonp-jquery.html